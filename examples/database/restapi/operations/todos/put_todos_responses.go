// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"span/go-swagger-example/examples/database/models"
)

// PutTodosOKCode is the HTTP code returned for type PutTodosOK
const PutTodosOKCode int = 200

/*PutTodosOK put todos o k

swagger:response putTodosOK
*/
type PutTodosOK struct {

	/*
	  In: Body
	*/
	Payload *models.TodoFull `json:"body,omitempty"`
}

// NewPutTodosOK creates PutTodosOK with default headers values
func NewPutTodosOK() *PutTodosOK {
	return &PutTodosOK{}
}

// WithPayload adds the payload to the put todos o k response
func (o *PutTodosOK) WithPayload(payload *models.TodoFull) *PutTodosOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put todos o k response
func (o *PutTodosOK) SetPayload(payload *models.TodoFull) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTodosOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutTodosUnauthorizedCode is the HTTP code returned for type PutTodosUnauthorized
const PutTodosUnauthorizedCode int = 401

/*PutTodosUnauthorized put todos unauthorized

swagger:response putTodosUnauthorized
*/
type PutTodosUnauthorized struct {

	/*
	  In: Body
	*/
	Payload PutTodosUnauthorizedBody `json:"body,omitempty"`
}

// NewPutTodosUnauthorized creates PutTodosUnauthorized with default headers values
func NewPutTodosUnauthorized() *PutTodosUnauthorized {
	return &PutTodosUnauthorized{}
}

// WithPayload adds the payload to the put todos unauthorized response
func (o *PutTodosUnauthorized) WithPayload(payload PutTodosUnauthorizedBody) *PutTodosUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put todos unauthorized response
func (o *PutTodosUnauthorized) SetPayload(payload PutTodosUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTodosUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PutTodosForbiddenCode is the HTTP code returned for type PutTodosForbidden
const PutTodosForbiddenCode int = 403

/*PutTodosForbidden put todos forbidden

swagger:response putTodosForbidden
*/
type PutTodosForbidden struct {

	/*
	  In: Body
	*/
	Payload PutTodosForbiddenBody `json:"body,omitempty"`
}

// NewPutTodosForbidden creates PutTodosForbidden with default headers values
func NewPutTodosForbidden() *PutTodosForbidden {
	return &PutTodosForbidden{}
}

// WithPayload adds the payload to the put todos forbidden response
func (o *PutTodosForbidden) WithPayload(payload PutTodosForbiddenBody) *PutTodosForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put todos forbidden response
func (o *PutTodosForbidden) SetPayload(payload PutTodosForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTodosForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PutTodosNotFoundCode is the HTTP code returned for type PutTodosNotFound
const PutTodosNotFoundCode int = 404

/*PutTodosNotFound put todos not found

swagger:response putTodosNotFound
*/
type PutTodosNotFound struct {

	/*
	  In: Body
	*/
	Payload PutTodosNotFoundBody `json:"body,omitempty"`
}

// NewPutTodosNotFound creates PutTodosNotFound with default headers values
func NewPutTodosNotFound() *PutTodosNotFound {
	return &PutTodosNotFound{}
}

// WithPayload adds the payload to the put todos not found response
func (o *PutTodosNotFound) WithPayload(payload PutTodosNotFoundBody) *PutTodosNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put todos not found response
func (o *PutTodosNotFound) SetPayload(payload PutTodosNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTodosNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// PutTodosInternalServerErrorCode is the HTTP code returned for type PutTodosInternalServerError
const PutTodosInternalServerErrorCode int = 500

/*PutTodosInternalServerError put todos internal server error

swagger:response putTodosInternalServerError
*/
type PutTodosInternalServerError struct {

	/*
	  In: Body
	*/
	Payload PutTodosInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutTodosInternalServerError creates PutTodosInternalServerError with default headers values
func NewPutTodosInternalServerError() *PutTodosInternalServerError {
	return &PutTodosInternalServerError{}
}

// WithPayload adds the payload to the put todos internal server error response
func (o *PutTodosInternalServerError) WithPayload(payload PutTodosInternalServerErrorBody) *PutTodosInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put todos internal server error response
func (o *PutTodosInternalServerError) SetPayload(payload PutTodosInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutTodosInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}
